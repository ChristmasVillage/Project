//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChristmasVillageGUI.Proxies
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ChristmasVillageIFAC/ManageFactoryIFAC", ConfigurationName="ChristmasVillageGUI.Proxies.ManageFactoryIFAC")]
    public interface ManageFactoryIFAC
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/createManageFactory", ReplyAction="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/createManageFactoryR" +
            "esponse")]
        void createManageFactory(ChristmasVillageBO.ManageFactoryBO village);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/createManageFactory", ReplyAction="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/createManageFactoryR" +
            "esponse")]
        System.IAsyncResult BegincreateManageFactory(ChristmasVillageBO.ManageFactoryBO village, System.AsyncCallback callback, object asyncState);
        
        void EndcreateManageFactory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/findFactoryByVillage" +
            "", ReplyAction="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/findFactoryByVillage" +
            "Response")]
        System.Collections.Generic.List<ChristmasVillageBO.ManageFactoryBO> findFactoryByVillage(int id_Village);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/findFactoryByVillage" +
            "", ReplyAction="urn:ChristmasVillageIFAC/ManageFactoryIFAC/ManageFactoryIFAC/findFactoryByVillage" +
            "Response")]
        System.IAsyncResult BeginfindFactoryByVillage(int id_Village, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ChristmasVillageBO.ManageFactoryBO> EndfindFactoryByVillage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ManageFactoryIFACChannel : ChristmasVillageGUI.Proxies.ManageFactoryIFAC, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageFactoryIFACClient : System.ServiceModel.ClientBase<ChristmasVillageGUI.Proxies.ManageFactoryIFAC>, ChristmasVillageGUI.Proxies.ManageFactoryIFAC
    {
        
        public ManageFactoryIFACClient()
        {
        }
        
        public ManageFactoryIFACClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ManageFactoryIFACClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ManageFactoryIFACClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ManageFactoryIFACClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void createManageFactory(ChristmasVillageBO.ManageFactoryBO village)
        {
            base.Channel.createManageFactory(village);
        }
        
        public System.IAsyncResult BegincreateManageFactory(ChristmasVillageBO.ManageFactoryBO village, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BegincreateManageFactory(village, callback, asyncState);
        }
        
        public void EndcreateManageFactory(System.IAsyncResult result)
        {
            base.Channel.EndcreateManageFactory(result);
        }
        
        public System.Collections.Generic.List<ChristmasVillageBO.ManageFactoryBO> findFactoryByVillage(int id_Village)
        {
            return base.Channel.findFactoryByVillage(id_Village);
        }
        
        public System.IAsyncResult BeginfindFactoryByVillage(int id_Village, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginfindFactoryByVillage(id_Village, callback, asyncState);
        }
        
        public System.Collections.Generic.List<ChristmasVillageBO.ManageFactoryBO> EndfindFactoryByVillage(System.IAsyncResult result)
        {
            return base.Channel.EndfindFactoryByVillage(result);
        }
    }
}
