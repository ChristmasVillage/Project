//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChristmasVillageGUI.Proxies
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ChristmasVillageIFAC/UtilitiesIFAC", ConfigurationName="ChristmasVillageGUI.Proxies.UtilitiesIFAC")]
    public interface UtilitiesIFAC
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkCapital", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkCapitalResponse")]
        bool checkCapital(int userCapital);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkCapital", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkCapitalResponse")]
        System.IAsyncResult BegincheckCapital(int userCapital, System.AsyncCallback callback, object asyncState);
        
        bool EndcheckCapital(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkEmptyLocation", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkEmptyLocationResponse")]
        bool checkEmptyLocation(int locations);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkEmptyLocation", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/checkEmptyLocationResponse")]
        System.IAsyncResult BegincheckEmptyLocation(int locations, System.AsyncCallback callback, object asyncState);
        
        bool EndcheckEmptyLocation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getRandomNumber", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getRandomNumberResponse")]
        int getRandomNumber();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getRandomNumber", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getRandomNumberResponse")]
        System.IAsyncResult BegingetRandomNumber(System.AsyncCallback callback, object asyncState);
        
        int EndgetRandomNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getDate", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getDateResponse")]
        string getDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getDate", ReplyAction="urn:ChristmasVillageIFAC/UtilitiesIFAC/UtilitiesIFAC/getDateResponse")]
        System.IAsyncResult BegingetDate(System.AsyncCallback callback, object asyncState);
        
        string EndgetDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UtilitiesIFACChannel : ChristmasVillageGUI.Proxies.UtilitiesIFAC, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UtilitiesIFACClient : System.ServiceModel.ClientBase<ChristmasVillageGUI.Proxies.UtilitiesIFAC>, ChristmasVillageGUI.Proxies.UtilitiesIFAC
    {
        
        public UtilitiesIFACClient()
        {
        }
        
        public UtilitiesIFACClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public UtilitiesIFACClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public UtilitiesIFACClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public UtilitiesIFACClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool checkCapital(int userCapital)
        {
            return base.Channel.checkCapital(userCapital);
        }
        
        public System.IAsyncResult BegincheckCapital(int userCapital, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BegincheckCapital(userCapital, callback, asyncState);
        }
        
        public bool EndcheckCapital(System.IAsyncResult result)
        {
            return base.Channel.EndcheckCapital(result);
        }
        
        public bool checkEmptyLocation(int locations)
        {
            return base.Channel.checkEmptyLocation(locations);
        }
        
        public System.IAsyncResult BegincheckEmptyLocation(int locations, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BegincheckEmptyLocation(locations, callback, asyncState);
        }
        
        public bool EndcheckEmptyLocation(System.IAsyncResult result)
        {
            return base.Channel.EndcheckEmptyLocation(result);
        }
        
        public int getRandomNumber()
        {
            return base.Channel.getRandomNumber();
        }
        
        public System.IAsyncResult BegingetRandomNumber(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BegingetRandomNumber(callback, asyncState);
        }
        
        public int EndgetRandomNumber(System.IAsyncResult result)
        {
            return base.Channel.EndgetRandomNumber(result);
        }
        
        public string getDate()
        {
            return base.Channel.getDate();
        }
        
        public System.IAsyncResult BegingetDate(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BegingetDate(callback, asyncState);
        }
        
        public string EndgetDate(System.IAsyncResult result)
        {
            return base.Channel.EndgetDate(result);
        }
    }
}
